'''
-- 题目：
给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:
输入: [-2,1,-3,4,-1,2,1,-5,4],
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
-- 解法：
f(n)=max(f(n-1)+nums[n], nums[n])或者说
f(n) = nums[n]+max{f(n-1),0}
'''

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        max_num = nums[0]
        summ = nums[0]
        for i in range(1,len(nums)):
            max_num = max(max_num+nums[i], nums[i])
            summ = max(summ, max_num)
        return summ
